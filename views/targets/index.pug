extends ../partials/head
block content
  .all-wrapper
    .all-header-wrapper
      .header-title-wrapper
        span.header-title= __('Targets')
        span.header-subtitle= __('See and approve filter groups of Company\'s')
    .all-content-wrapper
      .all-content-inner-wrapper
        each target in targets
          .each-item-wrapper
            .each-item-header
              span.each-item-title= target.name
              span.each-item-subtitle (#{target.company.company_name})
              input.general-input-with-border.approve-price-input(type="number" placeholder=__('Enter the calculated price for the Target'))
              i.fas.fa-chevron-down.each-question-details-button
              i.fas.fa-check-circle.each-question-approve-button(id=target._id.toString())
            .each-item-content
              .each-item-content-item
                span.each-item-content-item-header #{__('Name')}:
                span.each-item-content-item-value #{target.name}
              .each-item-content-item
                span.each-item-content-item-header #{__('Description')}:
                span.each-item-content-item-value #{target.description}
              .each-item-content-item
                span.each-item-content-item-header #{__('Company Name')}:
                span.each-item-content-item-value #{target.company.company_name}
              .each-item-content-item
                span.each-item-content-item-header #{__('Company Email')}:
                span.each-item-content-item-value #{target.company.email}
              .each-item-content-item
                span.each-item-content-item-header #{__('Company Phone Number')}:
                span.each-item-content-item-value #{target.company.phone_number}
              .each-item-content-item
                span.each-item-content-item-header #{__('Company Account Holder Name')}:
                span.each-item-content-item-value #{target.company.account_holder_name}
              .each-item-content-item
                span.each-item-content-item-header #{__('Company Country')}:
                span.each-item-content-item-value #{target.company.country}
              .each-item-content-item
                span.each-item-content-item-header #{__('Filters')}:
              .each-item-content-item
                span.each-item-content-item-header #{__('Country')}:
                span.each-item-content-item-value #{target.country}
              each filter in Object.keys(target.filters)
                if filter == 'age'
                  .each-item-content-item
                    span.each-item-content-item-header #{__('Age')}:
                    span.each-item-content-item-value #{target.filters[filter].min} - #{target.filters[filter].max}
                else
                  .each-item-content-item
                    span.each-item-content-item-header #{filter}:
                    span.each-item-content-item-value #{Array.isArray(target.filters[filter]) ? target.filters[filter].join(', ') : target.filters[filter]}
              .each-item-content-item
                span.each-item-content-item-header #{__('Questions')}:
              each question, i in target.project.questions
                .each-item-content-item
                  span.each-item-content-item-header #{'Question'} #{i+1}:
                .each-item-content-item
                  span.each-item-content-item-header #{'Question Text'}:
                  span.each-item-content-item-value #{question.text}
                .each-item-content-item
                  span.each-item-content-item-header #{'Question Required'}:
                  span.each-item-content-item-value #{question.required ? __('Yes') : __('No')}
                if question.details && question.details.length
                  .each-item-content-item
                    span.each-item-content-item-header #{'Question Details'}:
                    span.each-item-content-item-value #{question.details}
                if question.image
                  .each-item-content-item
                    span.each-item-content-item-header #{'Question Image'}:
                    a.each-item-content-item-value(href=question.image target="_blank") #{__('Click to See')}
                .each-item-content-item
                  span.each-item-content-item-header #{'Question Type'}:
                  span.each-item-content-item-value #{__(question.type)}
                if question.type == 'multiple_choice'
                  .each-item-content-item
                    span.each-item-content-item-header #{'Answers'}:
                    span.each-item-content-item-value #{question.choices.join(', ')}
                else if question.type == 'opinion_scale'
                  .each-item-content-item
                    span.each-item-content-item-header #{'Range'}:
                    span.each-item-content-item-value #{question.range.min} - #{question.range.max}
                  if question.labels && (question.labels.left || question.labels.middle || question.labels.right)
                    .each-item-content-item
                      span.each-item-content-item-header #{'Labels'}:
                      span.each-item-content-item-value #{question.labels.left} - #{question.labels.middle} - #{question.labels.right}
